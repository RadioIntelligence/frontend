import flet as ft
import json


class CulturalApp:
    def __init__(self):
        self.page = None
        self.map_container = None
        self.recommendations = []
        self.events = []
        self.current_view = "main"  # "main", "events", "event_detail"
        self.current_event = None

    def main(self, page: ft.Page):
        self.page = page
        page.title = "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π –≥–∏–¥"
        page.theme_mode = ft.ThemeMode.LIGHT
        page.padding = 0
        page.fonts = {
            "Roboto": "https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"
        }
        page.theme = ft.Theme(font_family="Roboto")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.load_recommendations()
        self.load_events()  # <-- –¥–æ–±–∞–≤–ª–µ–Ω–æ

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_main_interface()

    def load_recommendations(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏"""
        self.recommendations = [
            {
                "id": 1,
                "title": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –º—É–∑–µ–π",
                "type": "–ú—É–∑–µ–π",
                "era": "XIX –≤–µ–∫",
                "distance": "1.2 –∫–º",
                "rating": 4.8,
                "image": "üèõÔ∏è",
                "lat": 52.6338,
                "lng": 54.1928
            },
            {
                "id": 2,
                "title": "–ü–∞—Ä–∫ –∫—É–ª—å—Ç—É—Ä—ã –∏ –æ—Ç–¥—ã—Ö–∞",
                "type": "–ü–∞—Ä–∫",
                "era": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
                "distance": "0.8 –∫–º",
                "rating": 4.7,
                "image": "üå≥",
                "lat": 52.6300,
                "lng": 54.1950
            },
            {
                "id": 3,
                "title": "–°—Ç–∞—Ä–∏–Ω–Ω–∞—è —É—Å–∞–¥—å–±–∞",
                "type": "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
                "era": "XVIII –≤–µ–∫",
                "distance": "2.1 –∫–º",
                "rating": 4.9,
                "image": "üè∞",
                "lat": 52.6400,
                "lng": 54.1880
            },
            {
                "id": 4,
                "title": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è",
                "type": "–ì–∞–ª–µ—Ä–µ—è",
                "era": "XX –≤–µ–∫",
                "distance": "1.5 –∫–º",
                "rating": 4.7,
                "image": "üñºÔ∏è",
                "lat": 52.6320,
                "lng": 54.1900
            }
        ]

    def load_events(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∞—Ñ–∏—à–∏"""
        self.events = [
            {
                "id": 1,
                "name": "–í—ã—Å—Ç–∞–≤–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
                "date": "15 –∏—é–Ω—è 2025, 18:00",
                "location": "–ì–∞–ª–µ—Ä–µ—è ¬´–ù–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ¬ª",
                "description": "–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä –∞–≤–∞–Ω–≥–∞—Ä–¥–∞ –∏ –∏–Ω—Å—Ç–∞–ª–ª—è—Ü–∏–π –æ—Ç –º–æ–ª–æ–¥—ã—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤.",
                "age_restriction": "12+",
                "duration": "2 —á–∞—Å–∞",
                "created_at": "1 –∏—é–Ω—è 2025",
                "image": "https://forum.pears.fun/data/avatars/o/0/923.jpg?1718281430"
            },
            {
                "id": 2,
                "name": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ü–µ—Ä—Ç –≤ –ø–∞—Ä–∫–µ",
                "date": "20 –∏—é–Ω—è 2025, 19:00",
                "location": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∫ –∫—É–ª—å—Ç—É—Ä—ã",
                "description": "–°–∏–º—Ñ–æ–Ω–∏—á–µ—Å–∫–∏–π –æ—Ä–∫–µ—Å—Ç—Ä –∏—Å–ø–æ–ª–Ω–∏—Ç –ª—É—á—à–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ß–∞–π–∫–æ–≤—Å–∫–æ–≥–æ –∏ –†–∞—Ö–º–∞–Ω–∏–Ω–æ–≤–∞ –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º.",
                "age_restriction": "0+",
                "duration": "1.5 —á–∞—Å–∞",
                "created_at": "5 –∏—é–Ω—è 2025",
                "image": "üéª"
            },
            {
                "id": 3,
                "name": "–¢–µ–∞—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–º—å–µ—Ä–∞: ¬´–†–µ–≤–∏–∑–æ—Ä¬ª",
                "date": "25 –∏—é–Ω—è 2025, 19:30",
                "location": "–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–∞—Ç—Ä –∏–º. –ì–æ–≥–æ–ª—è",
                "description": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –∫–æ–º–µ–¥–∏–∏ –ì–æ–≥–æ–ª—è.",
                "age_restriction": "16+",
                "duration": "3 —á–∞—Å–∞",
                "created_at": "10 –∏—é–Ω—è 2025",
                "image": "üé≠"
            }
        ]

    def create_search_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏"""
        return ft.Container(
            content=ft.Row([
                ft.Icon(ft.Icons.SEARCH, color=ft.Colors.GREY_600),
                ft.TextField(
                    hint_text="–ü–æ–∏—Å–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π...",
                    border=ft.InputBorder.NONE,
                    expand=True,
                    text_size=14,
                    on_change=self.on_search_change
                ),
                ft.IconButton(
                    icon=ft.Icons.FILTER_LIST,
                    icon_color=ft.Colors.GREY_600,
                    on_click=self.open_filters
                )
            ]),
            bgcolor=ft.Colors.WHITE,
            border_radius=25,
            padding=ft.padding.symmetric(horizontal=16),
            margin=ft.margin.symmetric(vertical=8),
            shadow=ft.BoxShadow(
                spread_radius=1,
                blur_radius=8,
                color=ft.Colors.BLACK12,
                offset=ft.Offset(0, 2)
            )
        )

    def create_header(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        return ft.Container(
            content=ft.Column([
                ft.Row([
                    ft.Text(
                        "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π –≥–∏–¥",
                        size=24,
                        weight=ft.FontWeight.BOLD,
                        color=ft.Colors.WHITE
                    ),
                    ft.IconButton(
                        icon=ft.Icons.ACCOUNT_CIRCLE,
                        icon_color=ft.Colors.WHITE,
                        on_click=self.open_profile
                    )
                ]),
                self.create_search_bar()
            ]),
            bgcolor=ft.Colors.PRIMARY,
            padding=16,
            shadow=ft.BoxShadow(
                spread_radius=1,
                blur_radius=10,
                color=ft.Colors.BLACK26,
                offset=ft.Offset(0, 2)
            )
        )

    def create_navigation(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        nav_items = [
            {"icon": ft.Icons.MAP, "label": "–ö–∞—Ä—Ç–∞", "active": True},
            {"icon": ft.Icons.EXPLORE, "label": "–ö–∞—Ç–∞–ª–æ–≥"},
            {"icon": ft.Icons.EVENT, "label": "–ê—Ñ–∏—à–∞"},
            {"icon": ft.Icons.FAVORITE, "label": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"},
            {"icon": ft.Icons.ROUTE, "label": "–ú–∞—Ä—à—Ä—É—Ç—ã"}
        ]

        return ft.Container(
            content=ft.Row([
                ft.Container(
                    content=ft.Column([
                        ft.IconButton(
                            icon=item["icon"],
                            icon_color=ft.Colors.WHITE if item.get("active") else ft.Colors.GREY_600,
                            on_click=lambda e, i=index: self.on_nav_click(e, i)
                        ),
                        ft.Text(
                            item["label"],
                            size=10,
                            color=ft.Colors.WHITE if item.get("active") else ft.Colors.GREY_600
                        )
                    ], horizontal_alignment=ft.CrossAxisAlignment.CENTER, spacing=2),
                    bgcolor=ft.Colors.PRIMARY if item.get("active") else ft.Colors.TRANSPARENT,
                    border_radius=12,
                    padding=8,
                    margin=2
                ) for index, item in enumerate(nav_items)
            ], alignment=ft.MainAxisAlignment.SPACE_EVENLY),
            bgcolor=ft.Colors.WHITE,
            padding=8,
            shadow=ft.BoxShadow(
                spread_radius=1,
                blur_radius=8,
                color=ft.Colors.BLACK12,
                offset=ft.Offset(0, -2)
            )
        )

    def create_recommendation_card(self, item):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        return ft.Card(
            content=ft.Container(
                content=ft.Column([
                    ft.Row([
                        ft.Text(item["image"], size=24),
                        ft.VerticalDivider(),
                        ft.Column([
                            ft.Text(
                                item["title"],
                                weight=ft.FontWeight.BOLD,
                                size=14
                            ),
                            ft.Row([
                                ft.Container(
                                    content=ft.Text(
                                        item["type"],
                                        size=10,
                                        color=ft.Colors.BLUE_700
                                    ),
                                    bgcolor=ft.Colors.BLUE_50,
                                    border_radius=8,
                                    padding=ft.padding.symmetric(horizontal=8, vertical=2)
                                ),
                                ft.Text(
                                    f"‚≠ê {item['rating']}",
                                    size=10,
                                    color=ft.Colors.AMBER
                                )
                            ], spacing=8)
                        ], expand=True)
                    ]),
                    ft.Row([
                        ft.Text(
                            f"üìè {item['distance']}",
                            size=12,
                            color=ft.Colors.GREY_600
                        ),
                        ft.Text(
                            f"üïí {item['era']}",
                            size=12,
                            color=ft.Colors.GREY_600
                        )
                    ], alignment=ft.MainAxisAlignment.SPACE_BETWEEN)
                ]),
                padding=12,
                on_click=lambda e: self.open_place_detail(item["id"])
            ),
            elevation=2,
            margin=ft.margin.symmetric(vertical=4),
        )

    def create_recommendations_section(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        return ft.Container(
            content=ft.Column([
                ft.Row([
                    ft.Text(
                        "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ—Å–µ—Ç–∏—Ç—å",
                        size=18,
                        weight=ft.FontWeight.BOLD
                    ),
                    ft.TextButton(
                        "–í—Å–µ ‚Üí",
                        on_click=self.open_catalog
                    )
                ], alignment=ft.MainAxisAlignment.SPACE_BETWEEN),
                ft.Column([
                    self.create_recommendation_card(item) for item in self.recommendations
                ], scroll=ft.ScrollMode.ADAPTIVE, height=400)
            ]),
            padding=16,
            bgcolor=ft.Colors.GREY_50,
            width=400
        )

    def create_main_interface(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤–∫–ª–∞–¥–æ–∫"""
        self.main_content = ft.Container(expand=True)

        self.page.add(
            ft.Column([
                self.create_header(),
                self.main_content,
                self.create_navigation()
            ], expand=True)
        )

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω (–ö–∞—Ä—Ç–∞ + –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏)
        self.show_main_screen()

    def create_event_card(self, event):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±—ã—Ç–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Stack –¥–ª—è –Ω–∞–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ–≤–µ—Ä—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        return ft.Card(
            content=ft.Container(
                content=ft.Stack(
                    controls=[
                        # –§–æ–Ω (–∑–∞–≥–ª—É—à–∫–∞ –ø–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
                        ft.Container(
                            content=ft.Column([
                                ft.Image(src=event["image"], fit=ft.ImageFit.COVER, expand=True, width=float("inf"), height=float("inf") ),
                            ], alignment=ft.MainAxisAlignment.CENTER, horizontal_alignment=ft.CrossAxisAlignment.CENTER),
                            bgcolor=ft.Colors.GREY_100,
                            expand=True,
                            alignment=ft.alignment.center
                            # üî• –ó–∞–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–µ —É–≥–ª—ã:
                            
                        ),
                        # –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –∑–∞—Ç–µ–º–Ω—è—é—â–∏–π —Å–ª–æ–π
                        ft.Container(
                            bgcolor=ft.Colors.BLACK54,
                            expand=True
                        ),
                        # –¢–µ–∫—Å—Ç –ø–æ–≤–µ—Ä—Ö
                        ft.Container(
                            content=ft.Column([
                                ft.Text(
                                    event["name"],
                                    size=16,
                                    weight=ft.FontWeight.BOLD,
                                    color=ft.Colors.WHITE,
                                    max_lines=2,
                                    overflow=ft.TextOverflow.ELLIPSIS
                                ),
                                ft.Text(
                                    f"üìÖ {event['date']}",
                                    size=12,
                                    color=ft.Colors.WHITE70
                                ),
                                ft.Text(
                                    f"üìç {event['location']}",
                                    size=12,
                                    color=ft.Colors.WHITE70
                                ),
                                ft.Container(
                                    content=ft.Text(
                                        event["age_restriction"],
                                        size=10,
                                        color=ft.Colors.RED_200,
                                        weight=ft.FontWeight.BOLD
                                    ),
                                    bgcolor=ft.Colors.RED_800,
                                    border_radius=4,
                                    padding=ft.padding.symmetric(horizontal=6, vertical=2),
                                    margin=ft.margin.only(top=4)
                                    
                                )
                            ], spacing=4),
                            padding=12,
                            alignment=ft.alignment.bottom_left,
                            expand=True
                        )
                    ]
                ),
                height=200,  # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
                on_click=lambda e, ev=event: self.open_event_detail(ev)
            ),
            elevation=3,
            margin=ft.margin.symmetric(vertical=6, horizontal=4),
            shape=ft.RoundedRectangleBorder(radius=16),  # ‚Üê –∑–∞–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–µ —É–≥–ª—ã
            clip_behavior=ft.ClipBehavior.HARD_EDGE,  # ‚Üê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!
        )

    def create_events_section(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –∞—Ñ–∏—à–∏"""
        return ft.Container(
            content=ft.Column([
                ft.Text(
                    "–ê—Ñ–∏—à–∞ —Å–æ–±—ã—Ç–∏–π",
                    size=20,
                    weight=ft.FontWeight.BOLD,
                    text_align=ft.TextAlign.CENTER
                ),
                ft.Column([
                    self.create_event_card(event) for event in self.events
                ], spacing=8, scroll=ft.ScrollMode.ADAPTIVE, expand=True)
            ], spacing=12, expand=True),
            padding=16,
            bgcolor=ft.Colors.WHITE,
            expand=True
        )

    def show_main_screen(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ (–ö–∞—Ä—Ç–∞ + –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏)"""
        main_content = ft.Row([
            self.create_recommendations_section()
        ], expand=True)
        self.main_content.content = main_content
        self.page.update()

    def show_events_screen(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –∞—Ñ–∏—à–∏"""
        self.current_view = "events"
        self.main_content.content = self.create_events_section()
        self.page.update()

    def show_catalog_screen(self):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞"""
        self.main_content.content = ft.Container(
            content=ft.Text("–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π", size=20),
            alignment=ft.alignment.center,
            expand=True
        )
        self.page.update()

    def show_favorites_screen(self):
        self.main_content.content = ft.Container(
            content=ft.Text("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", size=20),
            alignment=ft.alignment.center,
            expand=True
        )
        self.page.update()

    def show_routes_screen(self):
        self.main_content.content = ft.Container(
            content=ft.Text("–ú–∞—Ä—à—Ä—É—Ç—ã", size=20),
            alignment=ft.alignment.center,
            expand=True
        )
        self.page.update()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    def on_search_change(self, e):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞"""
        print(f"–ü–æ–∏—Å–∫: {e.control.value}")

    def open_filters(self, e):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        print("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤")

    def open_profile(self, e):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è"""
        print("–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")

    def on_nav_click(self, e, index):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        self.current_event = None  # ‚Üê —Å–±—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
        if index == 0:  # –ö–∞—Ä—Ç–∞
            self.show_main_screen()
        elif index == 1:  # –ö–∞—Ç–∞–ª–æ–≥
            self.show_catalog_screen()
        elif index == 2:  # –ê—Ñ–∏—à–∞
            self.show_events_screen()
        elif index == 3:  # –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
            self.show_favorites_screen()
        elif index == 4:  # –ú–∞—Ä—à—Ä—É—Ç—ã
            self.show_routes_screen()

    def update_navigation_state(self, active_index):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
        print(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞: {active_index}")

    def open_place_detail(self, place_id):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –º–µ—Å—Ç–∞"""
        print(f"–û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ—Å—Ç–∞: {place_id}")

    def open_catalog(self, e):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        print("–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞")

    def open_full_map(self, e):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç—ã"""
        print("–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç—ã")

    def open_event_detail(self, event):
        """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è"""
        self.current_event = event
        self.current_view = "event_detail"
        self.show_event_detail_screen()

    def show_event_detail_screen(self):
        image_ref = ft.Ref[ft.Container]()
        initial_height = 280
        min_height = 60  # ‚Üê –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º —Å–∫—Ä–æ–ª–ª–µ

        def on_scroll(e):
            scroll_offset = e.pixels
            # –ß–µ–º –±–æ–ª—å—à–µ —Å–∫—Ä–æ–ª–ª ‚Äî —Ç–µ–º –º–µ–Ω—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            new_height = max(min_height, initial_height - scroll_offset * 0.7)  # –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 0.7 –¥–ª—è –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —Å–∂–∞—Ç–∏—è
            image_ref.current.height = new_height

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è: –ø—Ä–∏ –º–∞–ª–µ–Ω—å–∫–æ–π –≤—ã—Å–æ—Ç–µ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–≤–µ—Ä—Ö
            if new_height <= 80:
                title_overlay.visible = True
                title_main.visible = False
            else:
                title_overlay.visible = False
                title_main.visible = True

            self.page.update()

        # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–±–æ–ª—å—à–æ–≥–æ" —Ä–µ–∂–∏–º–∞ (–ø–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
        title_main = ft.Container(
            content=ft.Text(self.current_event["name"], size=24, weight=ft.FontWeight.BOLD),
            padding=ft.padding.only(left=16, right=16, top=16),
            visible=True
        )

        # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–º–∞–ª–µ–Ω—å–∫–æ–≥–æ" —Ä–µ–∂–∏–º–∞ (–ø–æ–≤–µ—Ä—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
        title_overlay = ft.Container(
            content=ft.Row([
                ft.IconButton(
                    icon=ft.Icons.ARROW_BACK,
                    icon_color=ft.Colors.WHITE,
                    on_click=self.go_back_to_events
                ),
                ft.Text(
                    self.current_event["name"],
                    size=16,
                    weight=ft.FontWeight.BOLD,
                    color=ft.Colors.WHITE,
                    expand=True,
                    text_align=ft.TextAlign.CENTER
                ),
                ft.Container(width=48)  # –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–Ω–æ–ø–∫–∏
            ]),
            padding=8,
            visible=False,
            alignment=ft.alignment.center
        )

        # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º (–¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
        image_container = ft.Container(
            content=ft.Stack([
                ft.Image(
                    src=self.current_event["image"],
                    fit=ft.ImageFit.COVER,
                    width=float("inf"),
                    height=initial_height
                ),
                title_overlay  # ‚Üê –±—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏
            ]),
            height=initial_height,
            ref=image_ref,
            border_radius=ft.border_radius.only(bottom_left=24, bottom_right=24) if initial_height > 100 else ft.border_radius.all(0)
        )

        info_content = ft.Column([
            title_main,  # ‚Üê –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ä–∞—Å–∫—Ä—ã—Ç–æ–º —Ä–µ–∂–∏–º–µ
            ft.Divider(height=10),
            ft.ListTile(
                leading=ft.Icon(ft.Icons.CALENDAR_MONTH, color=ft.Colors.GREY_600),
                title=ft.Text(f"–î–∞—Ç–∞: {self.current_event['date']}")
            ),
            ft.ListTile(
                leading=ft.Icon(ft.Icons.LOCATION_ON, color=ft.Colors.GREY_600),
                title=ft.Text(f"–ú–µ—Å—Ç–æ: {self.current_event['location']}")
            ),
            ft.ListTile(
                leading=ft.Text("üîû", size=18),
                title=ft.Text(f"–í–æ–∑—Ä–∞—Å—Ç: {self.current_event['age_restriction']}")
            ),
            ft.ListTile(
                leading=ft.Icon(ft.Icons.TIMER, color=ft.Colors.GREY_600),
                title=ft.Text(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {self.current_event['duration']}")
            ),
            ft.Container(
                content=ft.Column([
                    ft.Container(
                        content=ft.Text("–û–ø–∏—Å–∞–Ω–∏–µ", size=18, weight=ft.FontWeight.BOLD),
                        padding=ft.padding.only(left=16, top=16)
                    ),
                    ft.Container(
                        content=ft.Text(self.current_event["description"]),
                        padding=ft.padding.only(left=16, right=16)
                    ),
                    ft.Divider(),
                    ft.Container(
                        content=ft.Text(
                            f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {self.current_event['created_at']}",
                            size=12,
                            color=ft.Colors.GREY_600,
                            italic=True
                        ),
                        padding=ft.padding.only(left=16, top=8)
                    )
                ], spacing=8),
                bgcolor=ft.Colors.WHITE,
                expand=True
            ),
            ft.Container(
                content=ft.FilledButton("‚Üê –ù–∞–∑–∞–¥ –∫ –∞—Ñ–∏—à–µ", on_click=self.go_back_to_events),
                padding=16
            )
        ], spacing=0, tight=True)

        scroll_view = ft.ListView(
            controls=[
                image_container,
                info_content
            ],
            expand=True,
            on_scroll=on_scroll
        )

        self.main_content.content = scroll_view
        self.page.update()
    
    def go_back_to_events(self, e):
        """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–æ–±—ã—Ç–∏–π (–∞—Ñ–∏—à–µ)"""
        self.current_event = None
        self.show_events_screen()

# JavaScript —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
js_functions = """
// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–∞–º–∏
function initializeMap(containerId, options) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
    console.log('Initializing map in:', containerId);
    return {
        addMarker: function(lat, lng, title) {
            console.log('Adding marker:', lat, lng, title);
        },
        setCenter: function(lat, lng) {
            console.log('Setting center:', lat, lng);
        }
    };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
async function fetchRecommendations() {
    try {
        const response = await fetch('/api/recommendations');
        return await response.json();
    } catch (error) {
        console.error('Error fetching recommendations:', error);
        return [];
    }
}

async function searchPlaces(query, filters) {
    try {
        const response = await fetch('/api/search', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ query, filters })
        });
        return await response.json();
    } catch (error) {
        console.error('Error searching places:', error);
        return [];
    }
}
"""

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app = CulturalApp()
    ft.app(target=app.main)